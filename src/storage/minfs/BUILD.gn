# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/unification/zx_library.gni")

zx_library("minfs") {
  sdk = "source"
  sdk_headers = [
    "minfs/fsck.h",
    "minfs/bcache.h",
    "minfs/superblock.h",
    "minfs/inspector.h",
    "minfs/writeback.h",
    "minfs/transaction_limits.h",
    "minfs/allocator_reservation.h",
    "minfs/format.h",
    "minfs/minfs.h",
    "minfs/host.h",
    "minfs/metrics.h",
    "minfs/pending_work.h",
    "minfs/command_handler.h",
    "minfs/minfs_inspector.h",
  ]
  host = true
  static = true
  sources = [
    "allocator/allocator_common.cc",
    "allocator/allocator_reservation.cc",
    "allocator/metadata.cc",
    "allocator/storage_common.cc",
    "buffer_view.cc",
    "directory.cc",
    "file.cc",
    "fsck.cc",
    "lazy_buffer.cc",
    "lazy_reader.cc",
    "metrics.cc",
    "minfs.cc",
    "resizeable_array_buffer.cc",
    "transaction_limits.cc",
    "vnode.cc",
    "vnode_mapper.cc",
    "writeback.cc",
  ]
  if (is_fuchsia) {
    sources += [ "resizeable_vmo_buffer.cc" ]
  } else {
    sources += [
      "allocator/allocator_host.cc",
      "allocator/inode_manager_host.cc",
      "allocator/storage_host.cc",
      "bcache_host.cc",
      "host.cc",
      "superblock_host.cc",
    ]
  }
  public_deps = [
    "//zircon/system/ulib/bitmap",

    #"//zircon/system/ulib/disk_inspector",
    "//zircon/public/lib/fbl",
    "//zircon/system/ulib/fs",
    "//zircon/system/ulib/fs/journal",
    "//zircon/system/ulib/fs/transaction",

    # <minfs/bcache.h> has #include <fvm/client.h>.
    "//zircon/system/ulib/fvm",
    "//zircon/system/ulib/storage/operation",
  ]
  deps = [
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/safemath",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zxc",
    "//zircon/system/ulib/bitmap",
    "//zircon/system/ulib/disk_inspector",
    "//zircon/system/ulib/fs",
    "//zircon/system/ulib/fs/transaction",
    "//zircon/system/ulib/range",
    "//zircon/system/ulib/storage/buffer",
    "//zircon/system/ulib/storage/operation",
    "//zircon/third_party/ulib/cksum",
  ]
  if (is_fuchsia) {
    public_deps += [
      "//sdk/fidl/fuchsia.hardware.block:fuchsia.hardware.block_c",
      "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_c",
      "//sdk/fidl/fuchsia.minfs:fuchsia.minfs_llcpp",
      "//zircon/public/lib/zx",
      "//zircon/system/ulib/block-client",
      "//zircon/system/ulib/fzl",
      "//zircon/system/ulib/storage-metrics",
    ]
    deps += [
      "//sdk/fidl/fuchsia.device:fuchsia.device_c",
      "//sdk/fidl/fuchsia.device:fuchsia.device_llcpp",
      "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
      "//sdk/fidl/fuchsia.minfs:fuchsia.minfs_llcpp",
      "//zircon/public/lib/async",
      "//zircon/public/lib/async-cpp",
      "//zircon/public/lib/fidl",
      "//zircon/public/lib/sync",
      "//zircon/public/lib/zx",
      "//zircon/system/ulib/async-default",
      "//zircon/system/ulib/async-loop",
      "//zircon/system/ulib/async-loop:async-loop-cpp",
      "//zircon/system/ulib/async-loop:async-loop-default",
      "//zircon/system/ulib/fdio-caller",
      "//zircon/system/ulib/fidl-utils",
      "//zircon/system/ulib/fs/journal",
      "//zircon/system/ulib/fvm",
      "//zircon/system/ulib/fzl",
      "//zircon/system/ulib/storage-metrics",
      "//zircon/system/ulib/storage/operation",
      "//zircon/system/ulib/trace",
      "//zircon/system/ulib/trace-engine",
    ]
    sources += [
      "allocator/allocator.cc",
      "allocator/inode_manager.cc",
      "allocator/storage.cc",
      "bcache.cc",
      "inspector.cc",
      "inspector/command_handler.cc",
      "inspector/disk_struct.cc",
      "inspector/loader.cc",
      "inspector/minfs_inspector.cc",
      "inspector/parser.cc",
      "inspector_inode.cc",
      "inspector_inode_table.cc",
      "inspector_superblock.cc",
      "superblock.cc",
      "vnode_allocation.cc",
    ]
  } else {
    public_deps += [ "//zircon/public/lib/zircon-headers" ]
  }
  include_dirs = [ "." ]
  configs += [
    # TODO(fxb/58162): delete the below and fix compiler warnings
    "//build/config:Wno-conversion",
  ]
}
